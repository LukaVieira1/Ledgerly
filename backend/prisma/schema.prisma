generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Store {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(255)
  image        String?   @db.VarChar(255)
  createdAt   DateTime  @default(now()) @db.Timestamp(6)
  updatedAt   DateTime  @updatedAt @db.Timestamp(6)

  users       UserStore[]
  clients     Client[]
  sales       Sale[]
}

model User {
  id        Int         @id @default(autoincrement())
  name      String      @db.VarChar(255)
  email     String      @unique @db.VarChar(255)
  password  String
  createdAt DateTime    @default(now()) @db.Timestamp(6)
  updatedAt DateTime    @updatedAt @db.Timestamp(6)
  stores    UserStore[]
  sales     Sale[]
}

model UserStore {
  id        Int      @id @default(autoincrement())
  userId    Int
  storeId   Int
  role      UserRole
  user      User     @relation(fields: [userId], references: [id])
  store     Store    @relation(fields: [storeId], references: [id])

  @@unique([userId, storeId])
}

model Client {
  id            Int       @id @default(autoincrement())
  name          String    @db.VarChar(255)
  phone         String    @db.VarChar(20)
  birthDate     DateTime? @db.Date
  observations  String?   @db.Text
  debitBalance  Decimal   @default(0) @db.Decimal(20, 2)
  createdAt     DateTime  @default(now()) @db.Timestamp(6)
  updatedAt     DateTime  @updatedAt @db.Timestamp(6)

  storeId       Int
  store         Store     @relation(fields: [storeId], references: [id])
  sales         Sale[]
}

model Sale {
  id          Int      @id @default(autoincrement())
  value       Decimal  @db.Decimal(10, 2)
  description String?  @db.Text
  isPaid      Boolean  @default(false)
  saleDate    DateTime @default(now()) @db.Timestamp(6)
  dueDate     DateTime? @db.Date
  createdAt   DateTime @default(now()) @db.Timestamp(6)
  updatedAt   DateTime @updatedAt @db.Timestamp(6)
  

  storeId     Int
  store       Store    @relation(fields: [storeId], references: [id])
  clientId    Int
  client      Client   @relation(fields: [clientId], references: [id])
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  payments    Payment[]
}

model Payment {
  id        Int      @id @default(autoincrement())
  value     Decimal  @db.Decimal(20, 2)
  payDate   DateTime @default(now()) @db.Timestamp(6)
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @updatedAt @db.Timestamp(6)
 
  saleId    Int
  sale      Sale     @relation(fields: [saleId], references: [id])
}

enum UserRole {
  ADMIN
  OWNER
  MANAGER
  EMPLOYEE
}

